Specs 


Требования к алгоритму стеганографии. 

неподверженность стат анализу, 
наличие случайной привязки, 
неподтверженность атаке на подмену части сообщения (при изменении любой части сообщения при декодировании должен выводится мусор), 
максимальная скрытность и от "человека-читателя" и  от "бота-читателя", 
по возможности минимальная база для "обучения", 
кодируются только заглавные латинские буквы + 10 цифр + пробел + знаки препинания = |[A-Z]|+|0..9|+1+|[,.!?]| = 26+10+1+4=41 возможных символа. 
Термины:

Назовем "предложением" а) сообщение в icq б) строку, заключенную между 2мя точками в письме. 

Предпосылки: 

предположим,что у нас есть хорошая хэш-функция. (а пусть сжатие простое. Ну чтонить, что дает нам пункты б) и в) . Ее взаимствуем из существующих систем криптографии 8) Требования: 
нет коллизий + случайность + хороший разброс (сцепление) 

для целей кодирования можно использовать: 
число пробелов (во всем предложении или подряд), 
число знаков препинания (во всем предложении или подряд). Да и тип знака (запятая или нет8) ), 
разделение на сообщения (для диалогов icq), 
символы перевода строки, 
символы табуляции (хотя они скорее всего передаются как 4 пробела), 
опечатки (две буквы "a" подряд не встречаются ни в одном грамматически верном тексте, но легко возможны при вводе с клавиатуры) (непонятно, как быть с ошибками в базе фраз? хотя "двойное "а"" можно проверить при "обучении"), 
смайлики, 
замены символов на схожие внешне - "I"<->"l", "0"-"O" и т.д. (скорее специфично для спама, где используется для прохождения сквозь спам-фильтры) 
число вхождений буквы "e" (например) в предложении, 
какие-нибудь междометия 8) - плохо с точки зрения стат.анализа. С другой стороны, пользователь может указать, используемые им междометия...а как распознавать? другой пользователь будет указывать? не-юзер-френдли!
   3. Итого пока 7(хороших) + 2(сомнительных) способа кодирования.

   4. У нас есть строка байт, которую можно кодировать побайтово (ввиду (1) сцепление уже гарантировано).

   5. Нужно ли добавить "ничего не значащие" предложения? Как их дифференцировать?

   6. в icq предложения разбиваемы на несколько без потери смысловой нагрузки (отдельные сообщения в icq - сообщение "Hello,n0mad...How r u?" означает ровно то же, что и 2 сообщения "Hello, n0mad..." + "How r u?").

  7. Стеганограммы короткие (10-15 букв).







Предложения:

Простой, глупый алгоритм. Биты по номерам (уже хешированные):
четность числа пробелов в предложении. 
четность переводов строки, число опечаток, число замен буква-цифра (в какой либо пропорции), 
четность числа смайликов (скобок в смайлике? 8). 
четность числа букв "е" в предложении 
кратное от деления числа пробелов на 2 
число многоточий, число восклицательных знаков
Итого: на одну буку приходится 6 бит (42 символа + избыточность хэширования), каждые 6 бит шифруются в 1 предложение.

Плюсы: легко реализовать, обучение примитивно (берем фразу из базы, ее меняем - без потерь смысла - и готово),... удовлетворяет всем пунктам кроме 3го - при изменении слов декриптованное сообщение может не поменятся. Да и стат анализу - в среднем в каждом 2м сообщении будет перевод строки, например.... Тогда:

           7. Где несколько методов (2й бит) нужно провести "обучение" по базе - накопить статистику по пропорциям, используемых пользователем.

           8. Добавить 2-3 предложения для  checksumы или просто бит четности.
